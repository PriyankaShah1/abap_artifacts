managed implementation in class zbp_r_travel_tp unique;
strict ( 2 );

define behavior for ZR_TRAVEL_TP alias Travel
persistent table /dmo/travel_m
lock master
authorization master ( instance )
etag master LastChangedAt
{

  field ( readonly ) CreatedBy, CreatedAt, LastChangedBy, LastChangedAt;

  field ( mandatory ) AgencyId, CustomerId, begindate, EndDate;

  create;
  update;
  delete;
  field ( readonly ) TravelId;

  association _Bookings { create; }
  mapping for /dmo/travel_m
    {
      TravelId      = travel_id;
      AgencyId      = agency_id;
      CustomerId    = customer_id;
      BeginDate     = begin_date;
      EndDate       = end_date;
      BookingFee    = booking_fee;
      TotalPrice    = total_price;
      CurrencyCode  = currency_code;
      Description   = description;
      OverallStatus = overall_status;
      CreatedBy     = created_by;
      CreatedAt     = created_at;
      LastChangedBy = last_changed_by;
      LastChangedAt = last_changed_at;
    }
}

define behavior for ZR_BOOKING_TP alias Booking   //it is used to read in EML
persistent table /dmo/booking_m
lock dependent by _Travel
authorization dependent by _Travel

etag dependent by _travel
{
  update;
  delete;
  field ( readonly ) TravelId, BookingId;

  association _Travel;

  mapping for /dmo/booking_m
    {
      TravelId      = travel_id;
      BookingId     = booking_id;
      BookingDate   = booking_date;
      CustomerId    = customer_id;
      CarrierId     = carrier_id;
      ConnectionId  = connection_id;
      FlightDate    = flight_date;
      FlightPrice   = flight_price;
      CurrencyCode  = currency_code;
      BookingStatus = booking_status;
    }
}